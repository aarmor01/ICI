FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;
	BLINKYconfidence : REAL;
	PINKYconfidence : REAL;
	INKYconfidence : REAL;
	SUEconfidence : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	Runaway : REAL;
	GoToPill: REAL;
END_VAR

FUZZIFY BLINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PINKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0); 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdistance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY BLINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY INKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY PINKYconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY SUEconfidence			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY


DEFUZZIFY GoToPill			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY Runaway			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	//accu es el acumulador de dos graficas, el maximo de ellas
	//act se queda con el minimo de ellas

	//RunAway-----------------------------	
	RULE 1 : IF BLINKYdistance IS far THEN Runaway IS calm;
	RULE 1 : IF PINKYdistance IS far THEN Runaway IS calm;
	RULE 1 : IF INKYdistance IS far THEN Runaway IS calm;
	RULE 1 : IF SUEdistance IS far THEN Runaway IS calm;
	
	RULE 1 : IF BLINKYdistance IS medium THEN Runaway IS nervious;
	RULE 1 : IF PINKYdistance IS medium THEN Runaway IS nervious;
	RULE 1 : IF INKYdistance IS medium THEN Runaway IS nervious;
	RULE 1 : IF SUEdistance IS medium THEN Runaway IS nervious;
	//----------------------------------------
	
	//GoToPill --------------------------
	RULE 2 : IF BLINKYdistance IS far THEN GoToPill IS emergency;
	RULE 2 : IF PINKYdistance IS far THEN GoToPill IS emergency;
	RULE 2 : IF INKYdistance IS far THEN GoToPill IS emergency;
	RULE 2 : IF SUEdistance IS far THEN GoToPill IS emergency;
	
	RULE 2 : IF BLINKYdistance IS medium THEN GoToPill IS emergency;
	RULE 2 : IF PINKYdistance IS medium THEN GoToPill IS emergency;
	RULE 2 : IF INKYdistance IS medium THEN GoToPill IS emergency;
	RULE 2 : IF SUEdistance IS medium THEN GoToPill IS emergency;
	
	RULE 2 : IF BLINKYdistance IS near THEN GoToPill IS calm;
	RULE 2 : IF PINKYdistance IS near THEN GoToPill IS calm;
	RULE 2 : IF INKYdistance IS near THEN GoToPill IS calm;
	RULE 2 : IF SUEdistance IS near THEN GoToPill IS calm;
	
//	RULE 2 : IF BLINKYdistance IS near AND BLINKYconfidence IS high THEN GoToPill IS calm;
//	RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS high THEN GoToPill IS calm;
//	RULE 2 : IF INKYdistance IS near AND INKYconfidence IS high THEN GoToPill IS calm;
//	RULE 2 : IF SUEdistance IS near AND SUEconfidence IS high THEN GoToPill IS calm;
	//----------------------------------------
END_RULEBLOCK

END_FUNCTION_BLOCK

