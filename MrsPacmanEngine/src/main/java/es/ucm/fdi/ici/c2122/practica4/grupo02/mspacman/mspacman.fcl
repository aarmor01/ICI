FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

//VARIABLES
VAR_INPUT				// Define input variables
	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;
	
	BLINKYconfidence : REAL;
	PINKYconfidence : REAL;
	INKYconfidence : REAL;
	SUEconfidence : REAL;
	
	BLINKYtimeEdible : REAL;
	PINKYtimeEdible : REAL;
	INKYtimeEdible : REAL;
	SUEtimeEdible : REAL;
	
	GameTime : REAL;
END_VAR

//ACTIONS VARIABLES
VAR_OUTPUT				// Define output variable
	GoToPill: REAL;
	Runaway : REAL;
	Chase : REAL;
	ChasePoints : REAL;
END_VAR

//GameTime
FUZZIFY GameTime
	TERM soon := (0, 1) (890, 0); 
	TERM mid := (900, 0) (1000, 1) (2500, 1) (2750, 0); 
	TERM late := (2750, 0) (3000, 1) (4000, 1);
END_FUZZIFY
//TIMES
FUZZIFY BLINKYtimeEdible
	TERM critical := (0, 1) (50, 0); 
	TERM worth := (50, 0) (90, 1) (200, 1);  // le queda mas de un 25%
END_FUZZIFY
FUZZIFY PINKYtimeEdible
	TERM critical := (0, 1) (50, 0); 
	TERM worth := (50, 0) (90, 1) (200, 1);  // le queda mas de un 25%
END_FUZZIFY
FUZZIFY INKYtimeEdible
	TERM critical := (0, 1) (50, 0); 
	TERM worth := (50, 0) (90, 1) (200, 1);  // le queda mas de un 25%
END_FUZZIFY
FUZZIFY SUEtimeEdible
	TERM critical := (0, 1) (50, 0); 
	TERM worth := (50, 0) (90, 1) (200, 1);  // le queda mas de un 25%
END_FUZZIFY
//DISTANCES
FUZZIFY BLINKYdistance
	TERM near := (0, 0) (1, 1) (50, 0) ; 
	TERM medium := gauss 75 20;
	TERM far := (-2, 1) (-0.2, 1) (0, 0) (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYdistance
	TERM near := (0, 0) (1, 1) (50, 0) ; 
	TERM medium := gauss 75 20;
	TERM far := (-2, 1) (-0.2, 1) (0, 0) (100, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdistance
	TERM near := (0, 0) (1, 1) (50, 0) ;  
	TERM medium := gauss 75 20;
	TERM far := (-2, 1) (-0.2, 1) (0, 0) (100, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdistance			
	TERM near := (0, 0) (1, 1) (25, 0) ;  
	TERM medium := gauss 75 20;
	TERM far := (-2, 1) (-0.2, 1) (0, 0) (100, 0) (150, 1) (200, 1);
END_FUZZIFY
//CONFIDENCES
FUZZIFY BLINKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY INKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY PINKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY SUEconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

//ACTIONS
DEFUZZIFY Runaway			
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY GoToPill			
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 20 10;
	TERM emergency := (24,0) (25,1) (30,1);
	METHOD : COG;		
	DEFAULT := 0;		
END_DEFUZZIFY

DEFUZZIFY Chase			
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;
	DEFAULT := 0;		
END_DEFUZZIFY

DEFUZZIFY ChasePoints			
	TERM calm := (0,1) (5,1) (7,0);
	TERM nervious := (7, 0) (10, 0.7) (20, 0.7) (24, 0);
	TERM emergency := (24,0) (25,1) (30,1);
	METHOD : COG;
	DEFAULT := 0;		
END_DEFUZZIFY
//RULES
RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method se queda con el minimo de ellas
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM) es el acumulador de dos graficas, el maximo de ellas

	//Chase------------------------------------
	RULE 11 : IF (BLINKYdistance IS near AND BLINKYtimeEdible IS worth AND BLINKYconfidence IS high) THEN Chase IS emergency;
	RULE 12 : IF (PINKYdistance IS near AND PINKYtimeEdible IS worth AND PINKYconfidence IS high) THEN Chase IS emergency;
	RULE 13 : IF (INKYdistance IS near AND INKYtimeEdible IS worth AND INKYconfidence IS high) THEN Chase IS emergency;
	RULE 14 : IF (SUEdistance IS near AND SUEtimeEdible IS worth AND SUEconfidence IS high) THEN Chase IS emergency;
	//RunAway-----------------------------	
	RULE 211 : IF BLINKYdistance IS near AND BLINKYtimeEdible IS critical AND 
			   (BLINKYconfidence IS high OR BLINKYconfidence IS medium)  THEN Runaway IS emergency;
	RULE 212 : IF BLINKYdistance IS near AND BLINKYtimeEdible IS critical AND 
	           (BLINKYconfidence IS high OR BLINKYconfidence IS medium) THEN ChasePoints IS nervious;
	
	RULE 213 : IF BLINKYdistance IS near AND BLINKYtimeEdible IS critical AND BLINKYconfidence IS low THEN Runaway IS nervious;
	//-
	RULE 221 : IF PINKYdistance IS near AND PINKYtimeEdible IS critical AND 
				(PINKYconfidence IS high OR PINKYconfidence IS medium) THEN Runaway IS emergency;
	RULE 222 : IF PINKYdistance IS near AND PINKYtimeEdible IS critical AND
				(PINKYconfidence IS high OR PINKYconfidence IS medium) THEN ChasePoints IS nervious;

	RULE 223 : IF PINKYdistance IS near AND PINKYtimeEdible IS critical AND PINKYconfidence IS low THEN Runaway IS nervious;
	//-
	RULE 231 : IF INKYdistance IS near AND INKYtimeEdible IS critical AND 
			   (INKYconfidence IS high OR INKYconfidence IS medium) THEN Runaway IS emergency;
	RULE 232 : IF INKYdistance IS near AND INKYtimeEdible IS critical AND 
			(INKYconfidence IS high OR INKYconfidence IS medium) THEN ChasePoints IS nervious;

	RULE 233 : IF INKYdistance IS near AND INKYtimeEdible IS critical AND INKYconfidence IS low THEN Runaway IS nervious;
	//-
	RULE 241 : IF SUEdistance IS near AND SUEtimeEdible IS critical AND 
				(SUEconfidence IS high OR SUEconfidence IS medium) THEN Runaway IS emergency;
	RULE 242 : IF SUEdistance IS near AND SUEtimeEdible IS critical AND 
				(SUEconfidence IS high OR SUEconfidence IS medium) THEN ChasePoints IS nervious;

	RULE 243 : IF SUEdistance IS near AND SUEtimeEdible IS critical AND SUEconfidence IS low THEN Runaway IS nervious;
	//GoToPill --------------------------
	RULE 3 : IF BLINKYdistance IS far AND 
				PINKYdistance IS far AND 
				INKYdistance IS far AND 
				SUEdistance IS far THEN GoToPill IS nervious;
	//----------------------------------------
	//GameTime -> ChasePoints
	RULE 41 : IF GameTime IS late THEN ChasePoints IS emergency;
	RULE 42 : IF GameTime IS mid THEN GoToPill IS emergency;

	
END_RULEBLOCK

END_FUNCTION_BLOCK

